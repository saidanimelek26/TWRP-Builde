name: Recovery Build (Legacy)

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'twrp-7.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/ycly2333/android_device_EEBBK_H3000S-twrp'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'twrp-7.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/EEBBK/H3000S'
      COMMON_TREE_URL:
        description: 'COMMON_TREE_URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'COMMON_PATH (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'H3000S'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'omni_H3000S'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"

    - name: Check Out
      uses: actions/checkout@v4

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Enable 32-bit Architecture
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install -y libc6:i386 libncurses5:i386 libstdc++6:i386 zlib1g:i386
      continue-on-error: true
      # Note: Enables 32-bit support for twrp-7.1 (Android 7.1)

    - name: Prepare the environment
      run: |
        sudo apt update && sudo apt upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            linux-modules-extra-$(uname -r) \
            gperf gcc-multilib g++-multilib \
            libc6-dev libncurses5-dev x11proto-core-dev libx11-dev tree zlib1g-dev libgl1-mesa-dev libxml2-utils \
            xsltproc bc ccache liblz4-tool libsdl1.2-dev \
            libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools \
            imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-12-dev python3 tar
      # Notes for twrp-7.1:
      # - Replaced libwxgtk3.2-dev with libwxgtk3.0-gtk3-dev
      # - Replaced lib32ncurses5-dev with libncurses5-dev
      # - Replaced lib32z1-dev with zlib1g-dev
      # - Removed lib32readline-dev (not needed)
      # - Uses gcc-multilib, g++-multilib for GCC 11

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') || 
          startsWith(github.event.inputs.DEVICE_TREE_URL, 'git@github.com') ||
          startsWith(github.event.inputs.COMMON_TREE_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install Python 2
      run: |
        sudo apt update
        sudo apt install -y wget build-essential zlib1g-dev libssl-dev libffi-dev
        wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
        tar -xzf Python-2.7.18.tgz
        cd Python-2.7.18
        ./configure --enable-optimizations
        make -j$(nproc)
        sudo make altinstall
        sudo ln -sf /usr/local/bin/python2.7 /usr/bin/python
      continue-on-error: true
      # Note: Python 2.7.18 is required for twrp-7.1

    - name: Verify Python 2
      run: |
        /usr/local/bin/python2.7 --version
      continue-on-error: true

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo-1 > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      # Note: Uses repo-1 for Python 2 compatibility with twrp-7.1

    - name: Verify repo
      run: |
        repo --version
      continue-on-error: true

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "azwhikaru"
        git config --global user.email "azwhikaru+37921907@github.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace

    - name: Clone device tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone common tree
      if: |
        github.event.inputs.COMMON_TREE_URL != null
        && github.event.inputs.COMMON_PATH != null
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Install GCC 7
      run: |
        sudo apt update
        sudo apt install -y gcc-7 g++-7 gcc-7-multilib g++-7-multilib
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 70
      continue-on-error: true
      # Note: GCC 7 is closer to the toolchain used for twrp-7.1

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: | 
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
